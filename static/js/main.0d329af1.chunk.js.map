{"version":3,"sources":["Navigate.tsx","AuthForm.tsx","EditForm.tsx","EditRow.tsx","WebhookList.tsx","CustomSnackbar.tsx","FormContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","marginBottom","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","styles","text","marginLeft","width","button","margin","AuthForm","props","setAuth","useForm","register","handleSubmit","errors","onSubmit","data","TextField","label","name","fullWidth","inputRef","required","pattern","error","Boolean","token","helperText","apiKey","Button","color","type","paper","callbackText","EditForm","handleCreateWebhook","create","Paper","elevation","Grid","container","spacing","item","xs","callbackURL","idModel","useRowStyles","borderBottom","Row","row","handleUpdateWebhook","update","handleDeleteWebhook","delete","React","useState","open","setOpen","TableRow","TableCell","align","IconButton","aria-label","size","onClick","component","scope","id","description","active","style","green","red","consecutiveFailures","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","alignItems","justify","ref","display","defaultValue","table","minWidth","WebhookList","rows","p","TableContainer","Table","TableHead","TableBody","map","Alert","CustomSnackbar","handleClose","message","Snackbar","autoHideDuration","onClose","severity","backdrop","zIndex","drawer","FormContainer","backdropOpen","setBackdropOpen","snackbarState","setSnackbarState","visible","setVisible","handleOpen","auth","setRows","useEffect","handleReadWebhook","isFirst","axios","get","params","key","then","res","catch","err","url","queryString","stringifyUrl","query","post","others","put","idWebhook","Backdrop","CircularProgress","_event","reason","createMuiTheme","palette","primary","main","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAKMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,SAAU,EACVC,aAAc,IAEhBC,MAAO,CACLF,SAAU,QAKD,SAASG,IACtB,IAAMC,EAAUT,IAEhB,OACE,qBAAKU,UAAWD,EAAQL,KAAxB,SACE,cAACO,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWD,EAAQF,MAA5C,2B,uECnBJS,EAASf,aAAW,iBAAO,CAC/BgB,KAAM,CACJC,WAAY,GACZC,MAAO,KAETC,OAAQ,CACNC,OAAQ,QAyCGC,EArCE,SAACC,GAChB,IAAMd,EAAUO,IACRQ,EAAYD,EAAZC,QAFyC,EAGNC,cAAnCC,EAHyC,EAGzCA,SAAUC,EAH+B,EAG/BA,aAAcC,EAHiB,EAGjBA,OAGhC,OACE,uBAAMC,SAAUF,GAHD,SAACG,GAAD,OAAeN,EAAQM,MAGtC,UACE,cAACC,EAAA,EAAD,CACErB,UAAWD,EAAQQ,KACnBe,MAAM,QACNC,KAAK,QACLC,WAAS,EACTC,SAAUT,EAAS,CAAEU,UAAU,EAAMC,QAAS,sBAC9CC,MAAOC,QAAQX,EAAOY,OACtBC,WAAYb,EAAOY,OAAS,6BAE9B,cAACT,EAAA,EAAD,CACErB,UAAWD,EAAQQ,KACnBe,MAAM,UACNC,KAAK,SACLC,WAAS,EACTC,SAAUT,EAAS,CAAEU,UAAU,EAAMC,QAAS,sBAC9CC,MAAOC,QAAQX,EAAOc,QACtBD,WAAYb,EAAOc,QAAU,+BAE/B,cAACC,EAAA,EAAD,CACEjC,UAAWD,EAAQW,OACnBL,QAAQ,YACR6B,MAAM,YACNC,KAAK,SAJP,wB,kBCnCA7B,EAASf,aAAW,iBAAO,CAC/B6C,MAAO,CACLzB,OAAQ,IAEVJ,KAAM,CACJC,WAAY,GACZC,MAAO,KAET4B,aAAc,CACZ7B,WAAY,GACZC,MAAO,KAETC,OAAQ,CACNF,WAAY,QA4DD8B,EAxDE,SAACzB,GAChB,IAAMd,EAAUO,IACViC,EAAsB1B,EAAM2B,OAFc,EAGLzB,cAAnCC,EAHwC,EAGxCA,SAAUC,EAH8B,EAG9BA,aAAcC,EAHgB,EAGhBA,OAIhC,OACE,cAACuB,EAAA,EAAD,CAAOC,UAAW,EAAG1C,UAAWD,EAAQqC,MAAxC,SACE,sBAAMjB,SAAUF,GAJH,SAACG,GAAD,OAAqBmB,EAAoBnB,MAItD,SACE,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAAC1B,EAAA,EAAD,CACErB,UAAWD,EAAQQ,KACnBe,MAAM,cACNC,KAAK,cACLE,SAAUT,EAAS,CAAEU,UAAU,QAGnC,cAACiB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAAC1B,EAAA,EAAD,CACErB,UAAWD,EAAQsC,aACnBf,MAAM,0BACNC,KAAK,cACLE,SAAUT,EAAS,CAAEU,UAAU,IAC/BE,MAAOC,QAAQX,EAAO8B,aACtBjB,WAAYb,EAAO8B,aAAe,gBAGtC,cAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAAC1B,EAAA,EAAD,CACErB,UAAWD,EAAQQ,KACnBe,MAAM,sBACNC,KAAK,UACLE,SAAUT,EAAS,CACjBU,UAAU,EAAMC,QAAS,sBAE3BC,MAAOC,QAAQX,EAAO+B,SACtBlB,WAAYb,EAAO+B,SAAW,kCAGlC,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACd,EAAA,EAAD,CACEjC,UAAWD,EAAQW,OACnBL,QAAQ,YACR6B,MAAM,YACNC,KAAK,SAJP,8B,uMC7CNe,GAAe3D,YAAW,CAC9BG,KAAM,CACJ,QAAS,CACPyD,aAAc,YAsFLC,GAjFH,SAACvC,GAAqE,IACxEwC,EAAQxC,EAARwC,IAEFC,EAAsBzC,EAAM0C,OAC5BC,EAAsB3C,EAAM4C,OAJ6C,EAKpC1C,cAAnCC,EALuE,EAKvEA,SAAUC,EAL6D,EAK7DA,aAAcC,EAL+C,EAK/CA,OAL+C,EAMvDwC,IAAMC,UAAS,GANwC,mBAMxEC,EANwE,KAMlEC,EANkE,KAOzE9D,EAAUmD,KAIhB,OACE,qCACE,eAACY,EAAA,EAAD,CAAU9D,UAAWD,EAAQL,KAA7B,UACE,cAACqE,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,cAACC,EAAA,EAAD,CAAYC,aAAW,aAAaC,KAAK,QAAQC,QAAS,kBAAMP,GAASD,IAAzE,SACGA,EAAO,cAAC,IAAD,IAA0B,cAAC,IAAD,QAGtC,cAACG,EAAA,EAAD,CAAWM,UAAU,KAAKC,MAAM,MAAhC,SACGjB,EAAIkB,KAEP,cAACR,EAAA,EAAD,UAAYV,EAAImB,cAChB,cAACT,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGX,EAAIoB,OACD,cAAC,IAAD,CAAwBC,MAAO,CAAExC,MAAOyC,IAAM,QAC9C,cAAC,IAAD,CAAyBD,MAAO,CAAExC,MAAO0C,IAAI,UAEnD,cAACb,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BX,EAAIwB,yBAEhC,cAACf,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWW,MAAO,CAAEI,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAhE,SACE,cAACC,EAAA,EAAD,CAAUC,GAAItB,EAAMuB,QAAQ,OAAOC,eAAa,EAAhD,SACE,cAACC,EAAA,EAAD,CAAK1E,OAAQ,EAAb,SACE,cAACgC,EAAA,EAAD,CAAMC,WAAS,EAAC0C,WAAW,SAASC,QAAQ,SAA5C,SACE,cAAC5C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,uBAAM5B,SAAUF,GA3Bf,SAACG,GAAD,OAAqBkC,EAAoBlC,MA2B1C,UACE,uBACEG,KAAK,KACLiE,IAAKxE,EAAS,CAAEU,UAAU,IAC1BgD,MAAO,CAAEe,QAAS,QAClBC,aAAcrC,EAAIkB,KACpB,cAAClD,EAAA,EAAD,CACEG,WAAS,EACTF,MAAM,cACNC,KAAK,cACLE,SAAUT,EAAS,CAAEU,UAAU,IAC/BgE,aAAcrC,EAAImB,cACpB,cAACnD,EAAA,EAAD,CACEG,WAAS,EACTF,MAAM,0BACNC,KAAK,cACLE,SAAUT,EAAS,CAAEU,UAAU,IAC/BE,MAAOC,QAAQX,EAAO8B,aACtBjB,WAAYb,EAAO8B,aAAe,YAClC0C,aAAcrC,EAAIL,cACpB,cAAC3B,EAAA,EAAD,CACEG,WAAS,EACTF,MAAM,sBACNC,KAAK,UACLE,SAAUT,EAAS,CAAEU,UAAU,EAAMC,QAAS,sBAC9CC,MAAOC,QAAQX,EAAO+B,SACtBlB,WAAYb,EAAO+B,SAAW,8BAC9ByC,aAAcrC,EAAIJ,UACpB,cAACgB,EAAA,EAAD,CAAY9B,KAAK,SAAjB,SACE,cAAC,IAAD,MAEF,cAAC8B,EAAA,EAAD,CAAYG,QAAS,kBAAMZ,EAAoBH,EAAIkB,KAAnD,SACE,cAAC,IAAD,CAAYG,MAAO,CAAExC,MAAO0C,IAAG,6BCxF/CtF,GAAYC,YAAW,CAC3BoG,MAAO,CACLC,SAAU,OAuCCC,GAnCK,SAAChF,GACnB,IAAMd,EAAUT,KAEVgE,EAAsBzC,EAAM0C,OAC5BC,EAAsB3C,EAAM4C,OAC5BqC,EAAOjF,EAAMiF,KAEnB,OACE,cAACT,EAAA,EAAD,CAAKU,EAAG,EAAR,SACE,cAACC,EAAA,EAAD,CAAgB3B,UAAW5B,IAA3B,SACE,eAACwD,EAAA,EAAD,CAAOjG,UAAWD,EAAQ4F,MAAOxB,KAAK,QAAtC,UACE,cAAC+B,EAAA,EAAD,UACE,eAACpC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,iBACA,cAACA,EAAA,EAAD,CAAWtD,MAAM,MAAjB,yBACA,cAACsD,EAAA,EAAD,CAAWC,MAAM,SAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,uCAGJ,cAACmC,EAAA,EAAD,UACGL,EAAKM,KAAI,SAAC/C,GAAD,OACR,cAAC,GAAD,CAEEA,IAAKA,EACLI,OAAQD,EACRD,OAAQD,GAHHD,EAAIkB,iB,4DChCnB8B,GAAQ,SAACxF,GACb,OAAO,cAAC,KAAD,aAAU6B,UAAW,EAAGrC,QAAQ,UAAaQ,KAevCyF,GAbQ,SAACzF,GAEjB,IACG+C,EAAqC/C,EAArC+C,KAAM2C,EAA+B1F,EAA/B0F,YAAapE,EAAkBtB,EAAlBsB,KAAMqE,EAAY3F,EAAZ2F,QAEjC,OACE,cAACC,GAAA,EAAD,CAAU7C,KAAMA,EAAM8C,iBAAkB,IAAMC,QAASJ,EAAvD,SACE,cAAC,GAAD,CAAOI,QAASJ,EAAaK,SAAUzE,EAAvC,SACGqE,OCLHlH,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoH,SAAU,CACRC,OAAQtH,EAAMsH,OAAOC,OAAS,EAC9B7E,MAAO,aAwLE8E,GAnLO,WACpB,IAAMjH,EAAUT,KADU,EAEcqE,oBAAS,GAFvB,mBAEnBsD,EAFmB,KAELC,EAFK,OAGgBvD,mBAAwB,CAChEC,MAAM,EAAOzB,KAAM,OAAQqE,QAAS,KAJZ,mBAGnBW,EAHmB,KAGJC,EAHI,OAMIzD,oBAAS,GANb,mBAMnB0D,EANmB,KAMVC,EANU,KAOpBf,EAAc,kBAAMW,GAAgB,IACpCK,EAAa,kBAAML,GAAgB,IARf,EASFvD,mBAAe,CACrC3B,OAAQ,GAAIF,MAAO,KAVK,mBASnB0F,EATmB,KASb1G,EATa,OAYF6C,mBAAwB,IAZtB,mBAYnBmC,EAZmB,KAYb2B,EAZa,KAkB1BC,qBAAU,WACFF,EAAKxF,QAAUwF,EAAK1F,QAC1B6F,GAAkB,GAClBL,GAAW,MAGV,CAACE,IAEJ,IA+BMG,EAAoB,WAA+B,IAA9BC,EAA6B,wDAC9C5F,EAAkBwF,EAAlBxF,OAAQF,EAAU0F,EAAV1F,MAChByF,IACAM,IACGC,IADH,0CAC0ChG,EAD1C,aAC4D,CACxDiG,OAAQ,CACNC,IAAKhG,KAGRiG,MAAK,SAAAC,GACJT,EAAQS,EAAI9G,MACZmF,IACIqB,GACFR,EAAiB,CACfxD,MAAM,EACNzB,KAAM,UACNqE,QAAS,uBAGd2B,OAAM,SAAAC,GACL7B,IACIqB,GACFR,EAAiB,CACfxD,MAAM,EACNzB,KAAM,QACNqE,QAAS,oBAEbc,GAAW,OAoEjB,OACE,qCACE,cAAC,EAAD,CAAUxG,QAASA,IAClBuG,EAEC,qCACE,cAAC,EAAD,CAAU7E,OApIU,SAACpB,GAAqB,IACxCY,EAAkBwF,EAAlBxF,OAAQF,EAAU0F,EAAV1F,MAChByF,IACA,IAAMc,EAAMC,KAAYC,aAAa,CACnCF,IAAI,mCAAD,OAAqCvG,EAArC,aACH0G,MAAM,aACJR,IAAKhG,EACLF,MAAOA,GACJV,KAGPyG,IACGY,KAAKJ,GACLJ,MAAK,SAAAC,GACJP,IACAP,EAAiB,CACfxD,MAAM,EACNzB,KAAM,UACNqE,QAAS,wBAGZ2B,OAAM,SAAAC,GACL7B,IACAa,EAAiB,CACfxD,MAAM,EACNzB,KAAM,QACNqE,QAAS,2BA2GT,cAAC,GAAD,CACEjD,OAxEkB,SAACnC,GAAqB,IACxCY,EAAkBwF,EAAlBxF,OAAQF,EAAU0F,EAAV1F,MACRyC,EAAkBnD,EAAlBmD,GAAOmE,EAFgC,YAErBtH,EAFqB,QAG/CmG,IACA,IAAMc,EAAMC,KAAYC,aAAa,CACnCF,IAAI,qCAAD,OAAuC9D,GAC1CiE,MAAM,aACJR,IAAKhG,EACLF,MAAOA,GACJ4G,KAGPb,IACGc,IAAIN,GACJJ,MAAK,SAAAC,GACJP,IACApB,IACAa,EAAiB,CACfxD,MAAM,EACNzB,KAAM,UACNqE,QAAS,wBAGZ2B,OAAM,SAAAC,GACL7B,IACAa,EAAiB,CACfxD,MAAM,EACNzB,KAAM,QACNqE,QAAS,yBA6CP/C,OAxCkB,SAACmF,GAAuB,IAC1C5G,EAAkBwF,EAAlBxF,OAAQF,EAAU0F,EAAV1F,MAChByF,IACA,IAAMc,EAAMC,KAAYC,aAAa,CACnCF,IAAI,mCAAD,OAAqCvG,EAArC,qBAAuD8G,GAC1DJ,MAAO,CACLR,IAAKhG,EACLF,MAAOA,KAGX+F,IACGpE,OAAO4E,GACPJ,MAAK,SAAAC,GACJP,IACApB,IACAa,EAAiB,CACfxD,MAAM,EACNzB,KAAM,UACNqE,QAAS,wBAGZ2B,OAAM,SAAAC,GACL7B,IACAa,EAAiB,CACfxD,MAAM,EACNzB,KAAM,QACNqE,QAAS,yBAePV,KAAMA,OAER,6BAEJ,cAAC+C,GAAA,EAAD,CAAU7I,UAAWD,EAAQ8G,SAAUjD,KAAMqD,EAAc7C,QAASmC,EAApE,SACE,cAACuC,GAAA,EAAD,CAAkB5G,MAAM,cAG1B,cAAC,GAAD,CACE0B,KAAMuD,EAAcvD,KACpB2C,YA/JsB,SAACwC,EAA+BC,GAC3C,cAAXA,GACJ5B,EAAiB,2BAAKD,GAAN,IAAqBvD,MAAM,MA8JvCzB,KAAMgF,EAAchF,KACpBqE,QAASW,EAAcX,cC7LzBhH,GAAQyJ,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,cAcGC,GATH,WACV,OACE,eAACC,EAAA,EAAD,CAAe9J,MAAOA,GAAtB,UACE,cAAC,EAAD,IACA,cAAC,GAAD,QCHS+J,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.0d329af1.chunk.js","sourcesContent":["import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginBottom: 30\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Trellis\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = makeStyles(() => ({\r\n  text: {\r\n    marginLeft: 20,\r\n    width: 700\r\n  },\r\n  button: {\r\n    margin: 20\r\n  }\r\n}));\r\n\r\nconst AuthForm = (props: { setAuth: Function }) => {\r\n  const classes = styles();\r\n  const { setAuth } = props;\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = (data: any) => setAuth(data);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <TextField\r\n        className={classes.text}\r\n        label=\"Token\"\r\n        name=\"token\"\r\n        fullWidth\r\n        inputRef={register({ required: true, pattern: /^[0-9a-fA-F]{64}$/ })}\r\n        error={Boolean(errors.token)}\r\n        helperText={errors.token && \"Token required 64 chars.\"}\r\n      />\r\n      <TextField\r\n        className={classes.text}\r\n        label=\"API Key\"\r\n        name=\"apiKey\"\r\n        fullWidth\r\n        inputRef={register({ required: true, pattern: /^[0-9a-fA-F]{32}$/ })}\r\n        error={Boolean(errors.apiKey)}\r\n        helperText={errors.apiKey && \"API Key required 32 chars.\"}\r\n      />\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { Button, Grid, Paper, TextField } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { FormModel } from \"./types\";\r\n\r\n\r\nconst styles = makeStyles(() => ({\r\n  paper: {\r\n    margin: 30\r\n  },\r\n  text: {\r\n    marginLeft: 20,\r\n    width: 500\r\n  },\r\n  callbackText: {\r\n    marginLeft: 20,\r\n    width: 700\r\n  },\r\n  button: {\r\n    marginLeft: 20\r\n  }\r\n}));\r\n\r\nconst EditForm = (props: { create: Function }) => {\r\n  const classes = styles();\r\n  const handleCreateWebhook = props.create;\r\n  const { register, handleSubmit, errors } = useForm<FormModel>();\r\n\r\n  const onSubmit = (data: FormModel) => handleCreateWebhook(data);\r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.paper}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              className={classes.text}\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              inputRef={register({ required: false })}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              className={classes.callbackText}\r\n              label=\"Callback URL (Required)\"\r\n              name=\"callbackURL\"\r\n              inputRef={register({ required: true })}\r\n              error={Boolean(errors.callbackURL)}\r\n              helperText={errors.callbackURL && \"Required.\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              className={classes.text}\r\n              label=\"ID Model (Required)\"\r\n              name=\"idModel\"\r\n              inputRef={register({\r\n                required: true, pattern: /^[0-9a-fA-F]{24}$/\r\n              })}\r\n              error={Boolean(errors.idModel)}\r\n              helperText={errors.idModel && \"ID Model required 24 chars.\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              type=\"submit\">\r\n              Create\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default EditForm;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { FormModel, WebhookItem } from './types';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { green, red } from \"@material-ui/core/colors\";\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst Row = (props: { delete: Function; update: Function; row: WebhookItem }) => {\r\n  const { row } = props;\r\n\r\n  const handleUpdateWebhook = props.update;\r\n  const handleDeleteWebhook = props.delete;\r\n  const { register, handleSubmit, errors } = useForm<FormModel>();\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  const onSubmit = (data: FormModel) => handleUpdateWebhook(data);\r\n\r\n  return (\r\n    <>\r\n      <TableRow className={classes.root}>\r\n        <TableCell align=\"center\">\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.id}\r\n        </TableCell>\r\n        <TableCell>{row.description}</TableCell>\r\n        <TableCell align=\"center\">\r\n          {row.active\r\n            ? <CheckCircleOutlineIcon style={{ color: green[500] }} />\r\n            : <RemoveCircleOutlineIcon style={{ color: red[500] }} />}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{row.consecutiveFailures}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Grid container alignItems=\"center\" justify=\"center\">\r\n                <Grid item xs={10}>\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <input\r\n                      name=\"id\"\r\n                      ref={register({ required: true })}\r\n                      style={{ display: \"none\" }}\r\n                      defaultValue={row.id} />\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Description\"\r\n                      name=\"description\"\r\n                      inputRef={register({ required: false })}\r\n                      defaultValue={row.description} />\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Callback URL (Required)\"\r\n                      name=\"callbackURL\"\r\n                      inputRef={register({ required: true })}\r\n                      error={Boolean(errors.callbackURL)}\r\n                      helperText={errors.callbackURL && \"Required.\"}\r\n                      defaultValue={row.callbackURL} />\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"ID Model (Required)\"\r\n                      name=\"idModel\"\r\n                      inputRef={register({ required: true, pattern: /^[0-9a-fA-F]{24}$/ })}\r\n                      error={Boolean(errors.idModel)}\r\n                      helperText={errors.idModel && \"ID Model required 24 chars.\"}\r\n                      defaultValue={row.idModel} />\r\n                    <IconButton type=\"submit\">\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => handleDeleteWebhook(row.id)}>\r\n                      <DeleteIcon style={{ color: red['A400'] }} />\r\n                    </IconButton>\r\n                  </form>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Row;","import {\r\n  Box, Paper, Table, TableBody, TableCell,\r\n  TableContainer, TableHead, TableRow\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Row from \"./EditRow\";\r\nimport { WebhookItem } from \"./types\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst WebhookList = (props: { update: Function; delete: Function; rows: WebhookItem[] }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleUpdateWebhook = props.update;\r\n  const handleDeleteWebhook = props.delete;\r\n  const rows = props.rows;\r\n\r\n  return (\r\n    <Box p={3}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell>ID</TableCell>\r\n              <TableCell width=\"50%\">Description</TableCell>\r\n              <TableCell align=\"center\">Active</TableCell>\r\n              <TableCell align=\"right\">Consecutive Failures</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <Row\r\n                key={row.id}\r\n                row={row}\r\n                delete={handleDeleteWebhook}\r\n                update={handleUpdateWebhook} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default WebhookList;","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\n\r\nconst Alert = (props: AlertProps) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst CustomSnackbar = (props: {\r\n  open: boolean; handleClose: (event?: React.SyntheticEvent, reason?: string) => void; type: \"success\" | \"info\" | \"warning\" | \"error\"; message: string\r\n}) => {\r\n  const { open, handleClose, type, message } = props;\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={type}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\nexport default CustomSnackbar;","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport EditForm from \"./EditForm\";\r\nimport { Auth, FormModel, SnackbarState, WebhookItem } from \"./types\";\r\nimport WebhookList from \"./WebhookList\";\r\nimport queryString from \"query-string\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { makeStyles, Theme, createStyles, CircularProgress } from \"@material-ui/core\";\r\nimport CustomSnackbar from \"./CustomSnackbar\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }),\r\n);\r\n\r\nconst FormContainer = () => {\r\n  const classes = useStyles();\r\n  const [backdropOpen, setBackdropOpen] = useState(false);\r\n  const [snackbarState, setSnackbarState] = useState<SnackbarState>({\r\n    open: false, type: \"info\", message: \"\"\r\n  });\r\n  const [visible, setVisible] = useState(false);\r\n  const handleClose = () => setBackdropOpen(false);\r\n  const handleOpen = () => setBackdropOpen(true);\r\n  const [auth, setAuth] = useState<Auth>({\r\n    apiKey: \"\", token: \"\"\r\n  });\r\n  const [rows, setRows] = useState<WebhookItem[]>([]);\r\n  const handleCloseSnackbar = (_event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') return;\r\n    setSnackbarState({ ...snackbarState, open: false });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!(auth.apiKey && auth.token)) return;\r\n    handleReadWebhook(true);\r\n    setVisible(true);\r\n    // if auth is correct value, this effect work.\r\n    // eslint-disable-next-line\r\n  }, [auth]);\r\n\r\n  const handleCreateWebhook = (data: FormModel) => {\r\n    const { apiKey, token } = auth;\r\n    handleOpen();\r\n    const url = queryString.stringifyUrl({\r\n      url: `https://api.trello.com/1/tokens/${token}/webhooks`,\r\n      query: {\r\n        key: apiKey,\r\n        token: token,\r\n        ...data\r\n      }\r\n    });\r\n    axios\r\n      .post(url)\r\n      .then(res => {\r\n        handleReadWebhook();\r\n        setSnackbarState({\r\n          open: true,\r\n          type: \"success\",\r\n          message: \"Success Created!\"\r\n        });\r\n      })\r\n      .catch(err => {\r\n        handleClose();\r\n        setSnackbarState({\r\n          open: true,\r\n          type: \"error\",\r\n          message: \"Failure Created!\"\r\n        });\r\n      });\r\n  }\r\n\r\n  const handleReadWebhook = (isFirst: boolean = false) => {\r\n    const { apiKey, token } = auth;\r\n    handleOpen();\r\n    axios\r\n      .get(`https://api.trello.com/1/tokens/${token}/webhooks`, {\r\n        params: {\r\n          key: apiKey\r\n        }\r\n      })\r\n      .then(res => {\r\n        setRows(res.data);\r\n        handleClose();\r\n        if (isFirst)\r\n          setSnackbarState({\r\n            open: true,\r\n            type: \"success\",\r\n            message: \"Success Loaded!\"\r\n          });\r\n      })\r\n      .catch(err => {\r\n        handleClose();\r\n        if (isFirst)\r\n          setSnackbarState({\r\n            open: true,\r\n            type: \"error\",\r\n            message: \"Failure Loaded!\"\r\n          });\r\n        setVisible(false);\r\n      });\r\n  }\r\n\r\n  const handleUpdateWebhook = (data: FormModel) => {\r\n    const { apiKey, token } = auth;\r\n    const { id, ...others } = data;\r\n    handleOpen();\r\n    const url = queryString.stringifyUrl({\r\n      url: `https://api.trello.com/1/webhooks/${id}`,\r\n      query: {\r\n        key: apiKey,\r\n        token: token,\r\n        ...others\r\n      }\r\n    });\r\n    axios\r\n      .put(url)\r\n      .then(res => {\r\n        handleReadWebhook();\r\n        handleClose();\r\n        setSnackbarState({\r\n          open: true,\r\n          type: \"success\",\r\n          message: \"Success Updated!\"\r\n        });\r\n      })\r\n      .catch(err => {\r\n        handleClose();\r\n        setSnackbarState({\r\n          open: true,\r\n          type: \"error\",\r\n          message: \"Failure Updated!\"\r\n        });\r\n      });\r\n  }\r\n\r\n  const handleDeleteWebhook = (idWebhook: string) => {\r\n    const { apiKey, token } = auth;\r\n    handleOpen();\r\n    const url = queryString.stringifyUrl({\r\n      url: `https://api.trello.com/1/tokens/${token}/webhooks/${idWebhook}`,\r\n      query: {\r\n        key: apiKey,\r\n        token: token\r\n      }\r\n    });\r\n    axios\r\n      .delete(url)\r\n      .then(res => {\r\n        handleReadWebhook();\r\n        handleClose();\r\n        setSnackbarState({\r\n          open: true,\r\n          type: \"success\",\r\n          message: \"Success Deleted!\"\r\n        });\r\n      })\r\n      .catch(err => {\r\n        handleClose();\r\n        setSnackbarState({\r\n          open: true,\r\n          type: \"error\",\r\n          message: \"Failure Deleted!\"\r\n        });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AuthForm setAuth={setAuth} />\r\n      {visible\r\n        ?\r\n        <>\r\n          <EditForm create={handleCreateWebhook} />\r\n          <WebhookList\r\n            update={handleUpdateWebhook}\r\n            delete={handleDeleteWebhook}\r\n            rows={rows} />\r\n        </>\r\n        : <></>}\r\n\r\n      <Backdrop className={classes.backdrop} open={backdropOpen} onClick={handleClose}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      <CustomSnackbar\r\n        open={snackbarState.open}\r\n        handleClose={handleCloseSnackbar}\r\n        type={snackbarState.type}\r\n        message={snackbarState.message} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormContainer;","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Navigate from './Navigate';\nimport FormContainer from './FormContainer';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2770c2',\n    }\n  }\n})\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Navigate />\n      <FormContainer />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}